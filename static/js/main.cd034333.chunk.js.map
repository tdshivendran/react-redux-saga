{"version":3,"sources":["store/api/index.js","store/api/findLocationByLatLng.js","store/api/findWeatherById.js","store/api/getDroneData.js","store/actions.js","store/sagas/Weather.js","store/sagas/droneData.js","store/sagas/ApiErrors.js","store/sagas/DroneApiErrors.js","store/sagas/index.js","store/reducers/Weather.js","store/reducers/Drone.js","components/Weather.js","components/Header.js","components/Wrapper.js","components/Drone.js","components/DashCard.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","findLocationByLatLng","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","latlon","response","json","wrap","_context","prev","next","join","fetch","concat","sent","ok","abrupt","error","code","status","data","stop","_x","_x2","apply","this","arguments","findWeatherbyId","id","getDroneData","FETCH_WEATHER","API_ERROR","WEATHER_DATA_RECEIVED","WEATHER_ID_RECEIVED","FETCH_DRONE_DATA","DRONE_DATA_RECEIVED","DRONE_API_ERROR","watchWeatherIdReceived","watchFetchWeather","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_ref2","location","_context2","console","log","woeid","_marked2","_context3","all","takeEvery","_marked3","sagas_Weather","watchFetchDroneData","payload","droneData_marked","droneData_marked2","droneData","apiErrorReceived","watchApiError","toast","ApiErrors_marked","ApiErrors_marked2","ApiErrors","droneApiErrorReceived","watchDroneApiError","DroneApiErrors_marked","DroneApiErrors_marked2","DroneApiErrors","sagas","toConsumableArray","WeatherSagas","DroneSagas","initialState","loading","weatherId","name","temperature","weather_state_name","handlers","_handlers","defineProperty","state","objectSpread","c","weather","consolidated_weather","the_temp","latt_long","title","_latt_long$split","split","_latt_long$split2","slicedToArray","temperatureinCelsius","temperatureinFahrenheit","reducers_Weather","length","undefined","handler","drone_data","current_data","Drone_handlers","Drone","Chip","withStyles","theme","root","background","palette","secondary","main","label","color","primary","ChipRaw","Weather","props","onLoad","_this$props","react_default","createElement","LinearProgress_default","Weather_Chip","Component","connect","ownProps","_state$weather","dispatch","grow","flexGrow","classes","AppBar_default","position","Toolbar_default","Typography_default","variant","className","components_Weather","wrapper","height","children","DroneData","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","fetchData","bind","assertThisInitialized","daysDiff","setInterval","date1","date2","date1_ms","getTime","difference_ms","seconds","Math","floor","minutes","hours","days","getOwnPropertyNames","date_now","Date","data_time","timestamp","diff","last_updated","toLocaleDateString","toLocaleTimeString","style","textAlign","List_default","ListItem_default","ListItemText_default","metric","_state$droneData","CardHeader","CardHeaderRaw","card","margin","Card_default","DashCard_CardHeader","CardContent_default","components_Drone","store","rootReducer","combineReducers","weatherReducer","droneDataReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","createMuiTheme","typography","useNextVariants","App","styles","CssBaseline_default","react_redux_es","components_Wrapper","components_Header","components_DashCard","lib","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd034333.chunk.js","sourcesContent":["import findLocationByLatLng from \"./findLocationByLatLng\";\nimport findWeatherbyId from \"./findWeatherById\";\nimport getDroneData from \"./getDroneData\"\n\nexport default {\n  findLocationByLatLng,\n  findWeatherbyId,\n  getDroneData\n};\n","import \"isomorphic-fetch\";\n\nconst findLocationByLatLong = async (latitude, longitude) => {\n  const latlon = [latitude, longitude].join(\",\");\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/search/?lattlong=${latlon}`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findLocationByLatLong;\n","import \"isomorphic-fetch\";\n\nconst findWeatherbyId = async id => {\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/${id}/`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findWeatherbyId;\n","import \"isomorphic-fetch\";\n\nconst getDroneData = async () => {\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/drone`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default getDroneData;\n","export const FETCH_WEATHER = \"COMMAND/FETCH_WEATHER_FOR_LAT_LNG\";\nexport const API_ERROR = \"EVENT/API_ERROR_RECEIVED\";\nexport const WEATHER_DATA_RECEIVED = \"EVENT/WEATHER_DATA_RECEIVED\";\nexport const WEATHER_ID_RECEIVED = \"EVENT/WEATHER_ID_RECEIVED\";\n\nexport const FETCH_DRONE_DATA= \"COMMAND/FETCH_DRONE_DATA\";\nexport const DRONE_DATA_RECEIVED = \"EVENT/DRONE_DATA_RECEIVED\";\nexport const DRONE_API_ERROR = \"EVENT/DRONE_DATA_ERROR\";","import { takeEvery, call, put, cancel, all } from \"redux-saga/effects\";\nimport API from \"../api\";\nimport * as actions from \"../actions\";\n\n/*\n  1. The weather service requires us to make a search by lat/lng to find its\n  weather ID.\n  2. We then use that weather ID to get the weather.\n\n  This process is pretty well defined here with a saga.\n\n  call invokes a method\n  put dispatches an action\n  takeEvery watches actions and executes a function\n\n  Also -- the `*` in function is important; turns it into a \"generator\"\n\n*/\n\nfunction* watchWeatherIdReceived(action) {\n  const { id } = action;\n  const { error, data } = yield call(API.findWeatherbyId, id);\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_DATA_RECEIVED, data });\n}\n\nfunction* watchFetchWeather(action) {\n  const { latitude, longitude } = action;\n  const { error, data } = yield call(\n    API.findLocationByLatLng,\n    latitude,\n    longitude\n  );\n  if (error) {\n    console.log({ error });\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  const location = data[0] ? data[0].woeid : false;\n  if (!location) {\n    yield put({ type: actions.API_ERROR });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_ID_RECEIVED, id: location });\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.FETCH_WEATHER, watchFetchWeather),\n    takeEvery(actions.WEATHER_ID_RECEIVED, watchWeatherIdReceived)\n  ]);\n}\n\nexport default [watchAppLoad];\n","import { takeEvery, call, put, cancel, all } from \"redux-saga/effects\";\nimport API from \"../api\";\nimport * as actions from \"../actions\";\n\nfunction* watchFetchDroneData(action) {\n  const { error, data } = yield call(\n    API.getDroneData\n  );\n\n  if (error) {\n    console.log( \"error\", { error });\n    yield put({ type: actions.DRONE_API_ERROR, payload: error.code });\n    yield cancel();\n    return;\n  }\n\n  yield put({ type: actions.DRONE_DATA_RECEIVED, data });\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.FETCH_DRONE_DATA, watchFetchDroneData),\n  ]);\n}\n\nexport default [watchAppLoad];\n","import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error, `Error Received: ${action.code}`);\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\n}\n\nexport default [watchApiError];\n","import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* droneApiErrorReceived(action) {\n    yield call(toast.error, `Drone data fetch error: ${action.code}`);\n}\n\nfunction* watchDroneApiError() {\n    yield takeEvery(actions.DRONE_API_ERROR, droneApiErrorReceived);\n}\n\nexport default [watchDroneApiError];","import WeatherSagas from \"./Weather\";\nimport DroneSagas from \"./droneData\"\nimport ApiErrors from \"./ApiErrors\";\nimport DroneApiErrors from \"./DroneApiErrors\";\n\nexport default [...ApiErrors, ...DroneApiErrors, ...WeatherSagas, ...DroneSagas];\n","import * as actions from \"../actions\";\n\nconst initialState = {\n  loading: false,\n  weatherId: null,\n  name: \"\",\n  temperature: \"\",\n  weather_state_name: \"\",\n  latitude: null,\n  longitude: null,\n  data: {}\n};\n\nconst toF = c => (c * 9) / 5 + 32;\n\nconst startLoading = (state, action) => {\n  return { ...state, loading: true };\n};\n\nconst weatherIDReceived = (state, action) => {\n  return { ...state, weatherId: action.id };\n};\n\nconst weatherDataRecevied = (state, action) => {\n  const { data } = action;\n  if (!data[\"consolidated_weather\"]) return state;\n  const weather = data.consolidated_weather[0];\n  const { weather_state_name, the_temp } = weather;\n  const { latt_long, title: name } = data;\n  const [latitude, longitude] = latt_long.split(\",\");\n\n  return {\n    ...state,\n    loading: false,\n    latitude,\n    longitude,\n    temperatureinCelsius: the_temp,\n    temperatureinFahrenheit: toF(the_temp),\n    weather_state_name,\n    name,\n    data: action.data\n  };\n};\n\nconst handlers = {\n  [actions.FETCH_WEATHER]: startLoading,\n  [actions.WEATHER_ID_RECEIVED]: weatherIDReceived,\n  [actions.WEATHER_DATA_RECEIVED]: weatherDataRecevied\n};\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type];\n  if (typeof handler === \"undefined\") return state;\n  return handler(state, action);\n};\n","import * as actions from \"../actions\";\n\nconst initialState = {\n    loading: null,\n    drone_data: {},\n    current_data: {},\n    error:false\n};\n\nconst startFetch = (state, action) => {\n    if (state.loading !== false) {\n        return {...state, loading: true};\n    }\n};\n\nconst droneDataReceived = (state, action) => {\n    const {data} = action.data;\n    return {\n        ...state,\n        loading: false,\n        drone_data: data.data,\n        current_data: data[data.length - 1],\n        error: false\n\n    };\n};\n\nconst droneApiError = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        error: true\n    };\n};\n\nconst handlers = {\n    [actions.FETCH_WEATHER]: startFetch,\n    [actions.DRONE_DATA_RECEIVED]: droneDataReceived,\n    [actions.DRONE_API_ERROR]: droneApiError,\n};\n\nexport default (state = initialState, action) => {\n    const handler = handlers[action.type];\n    if (typeof handler === \"undefined\") return state;\n    return handler(state, action);\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport ChipRaw from \"@material-ui/core/Chip\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.secondary.main\n  },\n  label: {\n    color: theme.palette.primary.main\n  }\n});\nconst Chip = withStyles(cardStyles)(ChipRaw);\n\nclass Weather extends Component {\n  componentDidMount() {\n    this.props.onLoad();\n  }\n  render() {\n    const {\n      loading,\n      name,\n      weather_state_name,\n      temperatureinFahrenheit\n    } = this.props;\n    if (loading) return <LinearProgress />;\n    return (\n      <Chip\n        label={`Weather in ${name}: ${weather_state_name} and ${temperatureinFahrenheit}°`}\n      />\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  } = state.weather;\n  return {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.FETCH_WEATHER,\n      longitude: -95.3698,\n      latitude: 29.7604\n    })\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Weather);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Weather from \"./Weather\";\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  }\n};\n\nconst Header = props => {\n  const { classes } = props;\n\n  const name = \"\";\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {name} EOG React Visualization Assessment\n        </Typography>\n        <Weather />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  wrapper: {\n    background: theme.palette.background.main,\n    height: \"100vh\"\n  }\n});\n\nconst Wrapper = props => {\n  const { classes } = props;\n  return <div className={classes.wrapper}>{props.children}</div>;\n};\n\nexport default withStyles(styles)(Wrapper);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nclass DroneData extends Component {\n    constructor(props) {\n        super(props);\n\n        this.fetchData = this.fetchData.bind(this);\n        this.daysDiff = this.daysDiff.bind(this);\n    }\n\n    fetchData() {\n        this.props.onLoad();\n    }\n\n    componentDidMount() {\n        setInterval(this.fetchData, 2000);\n    }\n\n    daysDiff ( date1, date2 ) {\n\n        // Convert both dates to milliseconds\n        var date1_ms = date1.getTime();\n        var date2_ms = date2.getTime();\n\n        // Calculate the difference in milliseconds\n        var difference_ms = date2_ms - date1_ms;\n        //take out milliseconds\n        difference_ms = difference_ms/1000;\n        var seconds = Math.floor(difference_ms % 60);\n        difference_ms = difference_ms/60;\n        var minutes = Math.floor(difference_ms % 60);\n        difference_ms = difference_ms/60;\n        var hours = Math.floor(difference_ms % 24);\n        var days = Math.floor(difference_ms/24);\n\n        if (days > 0) {\n            if(days === 1) { return days + ' day ago'}\n            return days + ' days ago'\n        }\n        if (hours > 0) {\n            if(hours === 1) { return hours + ' hour ago'}\n            return hours + ' hours ago'\n        }\n        if (minutes > 0) {\n            if(minutes === 1) { return minutes + ' minute ago'}\n            return minutes + ' minutes ago'\n        }\n        if (seconds > 0) {\n            if(seconds === 1) { return seconds + ' second ago'}\n            return seconds + ' seconds ago'\n        }\n    }\n\n    render() {\n        const {current_data, error} = this.props;\n\n        if(error){\n            return (\n                <div>Error fetching drone data!</div>\n            )\n        }\n\n        if(Object.getOwnPropertyNames(current_data).length){\n\n            var date_now = new Date();\n            var data_time = new Date(current_data.timestamp );\n\n            var diff = this.daysDiff(data_time,date_now);\n            var last_updated = data_time.toLocaleDateString() + ' ' + data_time.toLocaleTimeString() + ' (' + diff + ')';\n\n            return (\n                <div>\n                    <div style={{textAlign: \"center\"}}>\n                        {!error && <span> Data being fetched every 2 seconds</span>}\n                        {error && <span> Error Fetching Drone Data</span>}\n                    </div>\n                    <List style={{textAlign: \"center\"}}>\n\n                        <ListItem>\n                            <ListItemText\n                                primary=\"Temperature (°F)\"\n                                secondary = {current_data.metric}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary=\"Latitude\"\n                                secondary = {current_data.latitude}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary=\"Longitude\"\n                                secondary = {current_data.longitude}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary=\"Last Received\"\n                                secondary = {last_updated}\n                            />\n                        </ListItem>\n                    </List>\n                </div>\n            );\n        }\n\n        return (\n            <div style={{textAlign: \"center\"}}>\n                Fetching Data\n            </div>\n        );\n\n    }\n}\n\nconst mapState = (state, ownProps) => {\n    const {loading, drone_data, metric, current_data, error} = state.droneData;\n    return {loading, drone_data, metric, current_data, error};\n};\n\nconst mapDispatch = dispatch => ({\n    onLoad: () =>\n        dispatch({\n            type: actions.FETCH_DRONE_DATA,\n            payload: null\n        })\n});\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(DroneData);\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeaderRaw from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DroneData from \"./Drone\";\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.primary.main\n  },\n  title: {\n    color: \"white\"\n  }\n});\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\n\nconst styles = {\n  card: {\n    margin: \"5% 25%\"\n  }\n};\n\nconst DashCard = props => {\n  const { classes } = props;\n  return (\n    <Card className={classes.card}>\n        <CardHeader title=\"Current Drone Data\"/>\n        <CardContent style={{textAlign: \"center\"}}>\n            <DroneData />\n        </CardContent>\n    </Card>\n  );\n};\n\nexport default withStyles(styles)(DashCard);\n","import React from \"react\";\nimport createStore from \"./store\";\nimport {Provider} from \"react-redux\";\nimport {ToastContainer} from \"react-toastify\";\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport NowWhat from \"./components/DashCard\";\n\nconst store = createStore();\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true\n    },\n    palette: {\n        primary: {\n            main: \"rgb(39,49,66)\"\n        },\n        secondary: {\n            main: \"rgb(197,208,222)\"\n        },\n        background: {\n            main: \"rgb(226,231,238)\"\n        }\n    }\n});\n\nconst App = props => (\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline/>\n        <Provider store={store}>\n            <Wrapper>\n                <Header/>\n                <NowWhat/>\n                <ToastContainer/>\n            </Wrapper>\n        </Provider>\n    </MuiThemeProvider>\n);\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport weatherReducer from \"./reducers/Weather\";\nimport droneDataReducer from \"./reducers/Drone\"\n\nexport default () => {\n  const rootReducer = combineReducers({\n    weather: weatherReducer,\n      droneData: droneDataReducer\n  });\n\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = applyMiddleware(sagaMiddleware);\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\n\n  sagas.forEach(sagaMiddleware.run);\n\n  return store;\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}